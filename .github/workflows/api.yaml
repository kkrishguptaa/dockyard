name: Build API

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/**"
      - "src/scripts/**"
      - "api/**"
  schedule:
    - cron: "0 */3 * * *" # Every 3 hours
  workflow_dispatch:

jobs:
  build-api:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: main
      - uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
        with:
          bun-version-file: "package.json"

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build API
        run: |
          bun run build:json-schema
          bun run build:api

      - name: Run the Action
        if: ${{ github.event_name != 'pull_request' }}
        uses: devops-infra/action-commit-push@master
        with:
          github_token: "${{ secrets.GITHUB_TOKEN }}"
          commit_message: "chore: update API build"
          target_branch: api-build-${{ github.run_id }}

      - name: Check if branch exists
        if: ${{ github.event_name != 'pull_request' }}
        id: check_branch
        run: |
          if git ls-remote --exit-code --heads origin api-build-${{ github.run_id }}; then
            echo "branch_exists=true" >> $GITHUB_OUTPUT
          else
            echo "branch_exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR and Merge
        if: ${{ github.event_name != 'pull_request' && steps.check_branch.outputs.branch_exists == 'true' }}
        run: |
          gh pr create --base main --head api-build-${{ github.run_id }} --title "API Build Update" --body "Automated API build update."
          gh pr merge --squash --delete-branch --admin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifacts
        uses: actions/upload-pages-artifact@7b1f4a764d45c48632c6b24a0339c27f5614fb0b # v4
        with:
          path: "api/"

      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4
